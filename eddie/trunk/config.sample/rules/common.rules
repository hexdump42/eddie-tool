# Eddie config file
#  Common rules for all machines
#  This is a sample configuration only.


###########################################################################
# MESSAGES
# Define MSGs to use in actions.  These are grouped by the M objects.

M commonmsg:
    M proc:
	MSG WARN: "Warning: %(procp)s on %(h)s not running"
	    """The %(procp)s process on %(h)s is not running

This is just a Warning.
Eddie."""

	MSG WARN_P: "Warn: The %(procp)s daemon on %(h)s is not running." ""

	MSG ALERT: "Alert: %(procp)s on %(h)s not running"
	    """ALERT: The %(procp)s daemon on %(h)s is not running.

%(actnm)s

Eddie."""

	MSG ALERT_P: "ALERT: The %(procp)s daemon on %(h)s is not running." ""

	MSG RE_WARN: "Alert: %(procp)s on %(h)s not running and is being restarted"
	    """ALERT: The %(procp)s daemon on %(h)s not running and is being restarted.

%(actnm)s

Eddie."""

	MSG RE_WARN_P: "ALERT: The %(procp)s daemon on %(h)s not running and is being restarted." ""

	MSG RE_ERR: "Alert: %(procp)s on %(h)s not restarting"
	    """ALERT: The %(procp)s daemon on %(h)s will not restart.

%(actnm)s

Eddie."""

	MSG RE_ERR_P: "ALERT: The %(procp)s daemon on %(h)s will not restart." ""

    M pid:
	MSG WARN: "Warning: pid file %(pidf)s not found on %(h)s"
	    """Pid file %(pidf)s not found on %(h)s.

Eddie."""

	MSG WARN_P: "%(h)s: pid file %(pidf)s not found" ""

	MSG ALERT: "ALERT: pid file %(pidf)s not found on %(h)s"
	    """Pid file %(pidf)s not found on %(h)s.

Eddie."""

	MSG ALERT_P: "%(h)s: pid file %(pidf)s not found" ""

    M pidpr:
	MSG WARN: "Warning: process %(pid)s (from %(pidf)s) on %(h)s not running"
	    """Warning: The process with pid %(pid)s (from pidfile '%(pidf)s') on %(h)s is not running.

Eddie."""

	MSG WARN_P: "%(h)s warn: pid %(pid)s from %(pidf)s not running" ""

	MSG ALERT: "Warning: process %(pid)s (from %(pidf)s) on %(h)s not running"
	    """ALERT: The process with pid %(pid)s (from pidfile '%(pidf)s') on %(h)s is not running.

%(act)s
Eddie."""

	MSG ALERT_P: "%(h)s alert: pid %(pid)s from %(pidf)s not running" ""

    M fs:
	MSG WARN: "Warning: %(h)s:%(fsf)s at %(fscapac)s%% - %(fsavail)s of %(fssize)s remain"
	    """Filesystem %(fsf)s on %(h)s has failed this FS rule:
    %(fsrule)s

----------------------------------------------------------------------
%(fsdf)s
----------------------------------------------------------------------

This is just a Warning.
Eddie."""

	MSG WARN_P: "Warn: %(h)s:%(fsf)s at %(fscapac)s%% - %(fsavail)s of %(fssize)s remain" ""

	MSG ALERT: "Alert: %(h)s:%(fsf)s at %(fscapac)s%% - %(fsavail)s of %(fssize)s remain"
	    """Filesystem %(fsf)s on %(h)s has failed this FS rule:
    %(fsrule)s

----------------------------------------------------------------------
%(fsdf)s
----------------------------------------------------------------------

Please free up space immediately.
Eddie."""

	MSG ALERT_P: "Alert: %(h)s:%(fsf)s at %(fscapac)s%% - %(fsavail)s of %(fssize)s remain" ""

    M sp:
	MSG WARN: "Warning: Port %(spprot)s/%(spport)s on %(h)s not responding"
	    """The service port %(spprot)s/%(spport)s on %(h)s is not responding.

Eddie."""

	MSG WARN_P: "%(h)s warn: Port %(spprot)s/%(spport)s not responding" ""

	MSG ALERT: "ALERT: Port %(spprot)s/%(spport)s on %(h)s not responding"
	    """The service port %(spprot)s/%(spport)s on %(h)s is not responding.
Please fix this immediately.

Eddie."""
                    
	MSG ALERT_P: "%(h)s ALERT: Port %(spprot)s/%(spport)s not responding" ""

    M port:
	MSG WARN: "Warning: Port %(portport)s on %(porthost)s not responding"
	    """The service port %(portport)s on %(porthost)s is not responding.

This is just a Warning.
Eddie."""
	MSG WARN_P: "Warn: Port %(portport)s on %(porthost)s not responding" ""
	MSG ALERT: "Alert: Port %(portport)s on %(porthost)s not responding"
	    """Alert: The service port %(portport)s on %(porthost)s is not responding.

Send data: %(portsend)s
Expecting: %(portexpect)s
Actually received: %(portrecv)s

Please examine if appropriate.
Eddie."""

	MSG ALERT_P: "Alert: Port %(portport)s on %(porthost)s not responding" ""


###########################################################################
# Notification Definitions
# These define notification levels, and what actions to perform at each level.

N COMMONALERT:

    # Notification
    Level 0:
	email($ALERT,WARN)

    # Warning
    Level 1:
	email($ALERT,WARN),ticker(WARN_P)

    # Alert
    Level 2:
	email($SYSSUP,ALERT_P),ticker(ALERT_P)

    # Serious Alert
    Level 3:
	email($ALERT,ALERT),email($SYSSUP,ALERT_P),ticker(ALERT_P)



N COMMONRESTART:

    # Restart and notify
    Level 0:
	restart("%(procp)s"),email($ALERT,RE_WARN)

    # Restart/page
    Level 1:
	restart("%(procp)s"),email($SYSSUP,RE_WARN),ticker(RE_WARN_P)


N SYSLOGRESTART:

    # Restart and notify
    Level 0:
	restart("syslog"),email($ALERT,RE_WARN)

    # Restart/page
    Level 1:
	restart("syslog"),email($SYSSUP,RE_WARN),ticker(RE_WARN_P)


N NAMEDRESTART:

    # Restart and notify
    Level 0:
	restart("bind"),email($ALERT,RE_WARN)

    # Restart/page
    Level 1:
	restart("bind"),email($SYSSUP,RE_WARN),ticker(RE_WARN_P)


###########################################################################
# RULES

# PROC rules to perform checks on processes
#   NR = process not running
#   R  = process is running

# define a PROC template to make the other PROC definitions much simpler
#  PROCs using this template will inherit all the settings, but the settings
#  can still be overridden per directive.
PROC 'proctpl': template=self           # indicates this is a template definition
		scanperiod='10m'        # default scanperiod
		numchecks=3             # number of checks to make before alerting
		checkwait=10            # interval between re-checks
		rule=NR                 # default rule to use

PROC cron:	procname='cron'
		template='proctpl'
		action='COMMONRESTART(commonmsg.proc)'
PROC syslogd:	procname='syslogd'
		template='proctpl'
		action='SYSLOGRESTART(commonmsg.proc)'
PROC inetd:	procname='inetd'
		template='proctpl'
		action='COMMONALERT(commonmsg.proc,1)'
PROC sshd:	procname='sshd'
		template='proctpl'
		action='COMMONALERT(commonmsg.proc,1)'

# FS directives perform checks on filesystems.
FS root:	fs='/'
		rule='capac>=90'
		action='COMMONALERT(commonmsg.fs,1)'
FS var:		fs='/var'
		rule='capac>=90'
		action='COMMONALERT(commonmsg.fs,2)'


# PID directives use pidfiles to perform checks.
#  EX rule means run actions if pidfile does not exist
#  PR rule means run actions if pid defined in pidfile is not currently in process table
PID sshd1:	pid='/var/run/sshd.pid'
		rule=EX
		action='COMMONALERT(commonmsg.pid,0)'
PID sshd2:	pid='/var/run/sshd.pid'
		rule=PR
		action='COMMONALERT(commonmsg.pidpr,1)'

# SP directives perform service port checks by examining the current list of
#  active listening ports (eg: 'netstat -anv') and performing actions if the
#  defined port/protocol/bind-address is not in the list.
SP ssh:		port='ssh'	# port to check, as defined in /etc/services
		protocol='tcp'	# protocol, eg: tcp or udp
		bindaddr='*'	# '*' on Solaris, or '0.0.0.0' on Linux
		action='COMMONALERT(commonmsg.sp,1)'

# COM directives can execute any commands and process rules based on the
#  output (stdout, stderr or return value) of the commands.

# This is one way to check the loadavg of a server.
COM loadavg:	cmd="uptime | cut -d, -f4 | awk '{print $3}'"
		rule="float(out) > 6.0"
		action='elvin("Load on %(h)s is %(comout)s")'


# LOGSCAN directive scans logfiles, looking for lines which match the given
# regex and performs the given actions.
LOGSCAN daemonlog:	file='/var/log/daemonlog'	# logfile to scan
			regex='.*'			# regex to match
			scanperiod='12h'		# how often to scan
			action='email("alert", "daemonlog %(h)s:%(logscanfile)s", "-- Logscan matched %(logscanlinecount)d lines: --\n%(logscanlines)s")'

LOGSCAN priv:		file='/var/log/messages'	# logfile to scan
			regex='.*priv.*'		# regex to match
			scanperiod='2h'			# how often to scan
			action='email("alert", "priv scan %(h)s:%(logscanfile)s", "-- Logscan matched %(logscanlinecount)d lines: --\n%(logscanlines)s")'

