eddiebrowser.cgi
http://eddie-tool.net/eddiebrowser/
(c) Chris Miles 2003 http://chrismiles.info/

Requirements:

 - Python 2+
   http://www.python.org/


Optional Requirements:

 To use the built-in RRD graphing functionality (recommended)
 - RRDtool Python module
   http://projects.gasperino.org/
   or:
   http://eddie-tool.net/eddiebrowser/python-RRDtool/
 - The above module requires RRDtool
   http://people.ee.ethz.ch/~oetiker/webtools/rrdtool/

 For collecting data and storing in RRD databases:
 - EDDIE-Tool
   http://eddie-tool.net/
 - Or any other data collector / RRD software.


INSTALLATION

 eddiebrowser is used to browser and display data stored in
 RRD database files.  It does not write or create RRD database
 files.  To do this use EDDIE-Tool or another data collection
 package.

 eddiebrowser expects a certain directory structure which is
 simple to create, and allows eddiebrowser to automatically
 pick up new hosts and data types to display.

 Start by creating a directory for all the data, let's call
 it /export/rrd
    $ mkdir /export/rrd
 In this directory create subdirectories for each of the data
 types.  Your data collector/RRD write package may do this
 automatically for you.
    $ mkdir /export/rrd/cpulinux
 Write the RRD files for this data type to this directory.
 Hostname details can be stored in the filename, allowing
 eddiebrowser to easily find the RRD files for specific
 hosts.

 Example:
    $ ls -al /export/rrd/cpulinux/
    -rw-r--r--  1 cmiles  root      1972 Jun 21 18:22 .eddiebrowser.cfg
    -rwxrwxrwx  1 cmiles  users   139188 Jun 22 16:36 cpulinux-crazy.rrd*
 This shows the RRD database file, cpulinux-crazy.rrd, for
 'cpulinux' data for host 'crazy'.
 It also shows a .eddiebrowser.cfg file.  Each directory needs
 a .eddiebrowser.cfg file to tell eddiebrowser how to find and
 display RRD data in the directories.

 In this example the .eddiebrowser.cfg looks like:
    NAME=CPU
    GROUP=CPU
    FILES=cpulinux-(?P<hostname>\w+).rrd

    GRAPH_TITLE=
    GRAPH_VERTICAL_LABEL=cpu use (%)
    GRAPH_DEFS=A,B,C,D

    GRAPH_LABEL_A=%(hostname)s cpu_user
    GRAPH_TYPE_A=AREA
    GRAPH_COLOR_A=0000FF
    GRAPH_SOURCE_A=cpu_user
    GRAPH_SOURCETYPE_A=AVERAGE
    GRAPH_GPRINT_A1=MIN:  (min=%.1lf
    GRAPH_GPRINT_A2=AVERAGE:avg=%.1lf
    GRAPH_GPRINT_A3=MAX:max=%.1lf)

    GRAPH_LABEL_B=%(hostname)s cpu_nice
    GRAPH_TYPE_B=STACK
    GRAPH_COLOR_B=00FFFF
    GRAPH_SOURCE_B=cpu_nice
    GRAPH_SOURCETYPE_B=AVERAGE
    GRAPH_GPRINT_B1=MIN:  (min=%.1lf
    GRAPH_GPRINT_B2=AVERAGE:avg=%.1lf
    GRAPH_GPRINT_B3=MAX:max=%.1lf)

    GRAPH_LABEL_C=%(hostname)s cpu_system
    GRAPH_TYPE_C=STACK
    GRAPH_COLOR_C=00FF00
    GRAPH_SOURCE_C=cpu_system
    GRAPH_SOURCETYPE_C=AVERAGE
    GRAPH_GPRINT_C1=MIN:(min=%.1lf
    GRAPH_GPRINT_C2=AVERAGE:avg=%.1lf
    GRAPH_GPRINT_C3=MAX:max=%.1lf)

    GRAPH_LABEL_D=%(hostname)s cpu_idle
    GRAPH_TYPE_D=LINE1
    GRAPH_COLOR_D=A0522D
    GRAPH_SOURCE_D=cpu_idle
    GRAPH_SOURCETYPE_D=AVERAGE
    GRAPH_GPRINT_D1=MIN:  (min=%.1lf
    GRAPH_GPRINT_D2=AVERAGE:avg=%.1lf
    GRAPH_GPRINT_D3=MAX:max=%.1lf)


